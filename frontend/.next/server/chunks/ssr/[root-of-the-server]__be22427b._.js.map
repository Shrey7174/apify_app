{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file:///home/shreyansh/Desktop/intern/apify-next-app/frontend/src/components/LoadingSkeleton.jsx"],"sourcesContent":["export default function LoadingSkeleton() {\n  return (\n    <div className=\"animate-pulse space-y-4\">\n      <div className=\"h-8 bg-gray-700 rounded w-1/3 mx-auto\"></div>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n        {[...Array(4)].map((_, i) => (\n          <div key={i} className=\"h-20 bg-gray-700 rounded\"></div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAAe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC;gBAAI,WAAU;0BACZ;uBAAI,MAAM;iBAAG,CAAC,GAAG,CAAC,CAAC,GAAG,kBACrB,8OAAC;wBAAY,WAAU;uBAAb;;;;;;;;;;;;;;;;AAKpB","debugId":null}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///home/shreyansh/Desktop/intern/apify-next-app/frontend/src/components/ActorList.jsx"],"sourcesContent":["'use client';\nimport { useState, useEffect } from 'react';\nimport LoadingSkeleton from './LoadingSkeleton';\n\nexport default function ActorList({ actors, loading, onSelect, title }) {\n  const [search, setSearch] = useState('');\n\n  const filtered = actors.filter(a =>\n    a.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  if (loading) return <LoadingSkeleton />;\n\n  return (\n    <div>\n      <h3 className=\"text-lg font-semibold mb-2\" style={{ color: '#58a6ff' }}>{title}</h3>\n      <input\n        type=\"search\"\n        placeholder=\"Search actors...\"\n        value={search}\n        onChange={e => setSearch(e.target.value)}\n        className=\"w-full mb-2 px-3 py-1 bg-[#161b22] text-[#c9d1d9] rounded border border-gray-600 focus:ring-[#58a6ff]\"\n      />\n      <ul className=\"space-y-2 overflow-auto max-h-64\">\n        {filtered.length === 0 && <li className=\"text-gray-500 italic\">No actors</li>}\n        {filtered.map(a => (\n          <li\n            key={a.id}\n            onClick={() => onSelect(a.id)}\n            className=\"cursor-pointer bg-[#161b22] border border-gray-600 p-2 rounded hover:bg-[#238636] transition\"\n          >\n            <p className=\"font-medium text-[#c9d1d9]\">{a.name}</p>\n            <p className=\"text-sm text-gray-400\">{a.title}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAFA;;;;AAIe,SAAS,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE;IACpE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,WAAW,OAAO,MAAM,CAAC,CAAA,IAC7B,EAAE,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,OAAO,WAAW;IAGlD,IAAI,SAAS,qBAAO,8OAAC,qIAAA,CAAA,UAAe;;;;;IAEpC,qBACE,8OAAC;;0BACC,8OAAC;gBAAG,WAAU;gBAA6B,OAAO;oBAAE,OAAO;gBAAU;0BAAI;;;;;;0BACzE,8OAAC;gBACC,MAAK;gBACL,aAAY;gBACZ,OAAO;gBACP,UAAU,CAAA,IAAK,UAAU,EAAE,MAAM,CAAC,KAAK;gBACvC,WAAU;;;;;;0BAEZ,8OAAC;gBAAG,WAAU;;oBACX,SAAS,MAAM,KAAK,mBAAK,8OAAC;wBAAG,WAAU;kCAAuB;;;;;;oBAC9D,SAAS,GAAG,CAAC,CAAA,kBACZ,8OAAC;4BAEC,SAAS,IAAM,SAAS,EAAE,EAAE;4BAC5B,WAAU;;8CAEV,8OAAC;oCAAE,WAAU;8CAA8B,EAAE,IAAI;;;;;;8CACjD,8OAAC;oCAAE,WAAU;8CAAyB,EAAE,KAAK;;;;;;;2BALxC,EAAE,EAAE;;;;;;;;;;;;;;;;;AAWrB","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/shreyansh/Desktop/intern/apify-next-app/frontend/src/components/SchemaEditor.jsx"],"sourcesContent":["'use client';\nimport { useState, useRef } from 'react';\nimport dynamic from 'next/dynamic';\nimport { ClipLoader } from 'react-spinners';\n\nconst JSONViewer = dynamic(() => import('react-json-view'), { ssr: false });\n\nexport default function SchemaEditor({ schema, input, setInput, runResult, onRun, loading }) {\n  const resultRef = useRef();\n\n  return (\n    <div className=\"space-y-4\">\n      <h3 className=\"mt-4 text-xl font-semibold\" style={{ color: '#58a6ff' }}>Enter Input & Run</h3>\n      <textarea\n        rows={6}\n        value={input}\n        onChange={e => setInput(e.target.value)}\n        className=\"w-full bg-[#0d1117] text-[#c9d1d9] border border-gray-600 px-3 py-2 rounded font-mono focus:ring-[#58a6ff]\"\n      />\n      <button\n        onClick={onRun}\n        disabled={loading}\n        className=\"px-5 py-2 bg-[#58a6ff] text-black rounded hover:scale-105 transition\"\n      >\n        {loading ? <ClipLoader size={20} color=\"#000\" /> : 'Run →'}\n      </button>\n\n      {runResult && (\n        <div ref={resultRef} className=\"bg-[#161b22] p-4 border border-gray-600 rounded overflow-auto max-h-96\">\n          <JSONViewer src={runResult} collapsed={2} theme=\"monokai\" enableClipboard={false} />\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;AAHA;;;;;AAKA,MAAM,aAAa,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD;;;;;;IAAqC,KAAK;;AAEpD,SAAS,aAAa,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE;IACzF,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD;IAEvB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;gBAA6B,OAAO;oBAAE,OAAO;gBAAU;0BAAG;;;;;;0BACxE,8OAAC;gBACC,MAAM;gBACN,OAAO;gBACP,UAAU,CAAA,IAAK,SAAS,EAAE,MAAM,CAAC,KAAK;gBACtC,WAAU;;;;;;0BAEZ,8OAAC;gBACC,SAAS;gBACT,UAAU;gBACV,WAAU;0BAET,wBAAU,8OAAC,+LAAA,CAAA,aAAU;oBAAC,MAAM;oBAAI,OAAM;;;;;2BAAY;;;;;;YAGpD,2BACC,8OAAC;gBAAI,KAAK;gBAAW,WAAU;0BAC7B,cAAA,8OAAC;oBAAW,KAAK;oBAAW,WAAW;oBAAG,OAAM;oBAAU,iBAAiB;;;;;;;;;;;;;;;;;AAKrF","debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file:///home/shreyansh/Desktop/intern/apify-next-app/frontend/src/app/page.jsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef } from 'react';\nimport axios from 'axios';\nimport dynamic from 'next/dynamic';\nimport { ClipLoader } from 'react-spinners';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst JSONViewer = dynamic(() => import('react-json-view'), { ssr: false });\nimport ActorList from '../components/ActorList';\nimport SchemaEditor from '../components/SchemaEditor';\nimport RunResult from '../components/RunResult';\n\nexport default function Home() {\n  const [apiKey, setApiKey] = useState('');\n  const [actors, setActors] = useState([]);\n  const [publicActors, setPublicActors] = useState([]);\n  const [schema, setSchema] = useState(null);\n  const [input, setInput] = useState('{}');\n  const [runResult, setRunResult] = useState(null);\n  const [actorId, setActorId] = useState('');\n  const [loading, setLoading] = useState(false);\n  const resultRef = useRef(null);\n\n  const notify = (msg, type = \"info\") => toast[type](msg, { autoClose: 3000 });\n  const scrollToResult = () => setTimeout(() => resultRef.current?.scrollIntoView({ behavior: \"smooth\" }), 200);\n  const backend = process.env.NEXT_PUBLIC_BACKEND_URL;\n\n  const fetchMyActors = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.post(`${backend}/api/actors`, { apiKey });\n      setActors(res.data.data?.items || []);\n      notify('My Actors fetched', 'success');\n    } catch {\n      notify('Failed to fetch your actors', 'error');\n      setActors([]);\n    } finally { setLoading(false); }\n  };\n\n  const fetchPublicActors = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get(`${backend}/api/actors/public`);\n      setPublicActors(res.data.data?.items || []);\n      notify('Public Actors fetched', 'success');\n    } catch {\n      notify('Failed to fetch public actors', 'error');\n      setPublicActors([]);\n    } finally { setLoading(false); }\n  };\n\n  const fetchSchema = async id => {\n    setLoading(true);\n    try {\n      const res = await axios.post(`${backend}/api/schema`, { actorId: id, apiKey });\n      setSchema(res.data);\n      setActorId(id);\n      notify('Schema loaded', 'success');\n      const s = res.data.inputSchema || {};\n      const sample = Object.fromEntries(Object.keys(s).map(k => {\n        const t = s[k].type;\n        return [k, t === 'string' ? \"\" : t === 'boolean' ? false : t === 'array' ? [] : t === 'object' ? {} : null];\n      }));\n      setInput(Object.keys(sample).length ? JSON.stringify(sample, null, 2) : '{}');\n    } catch {\n      notify('Failed to load schema', 'error');\n      setSchema(null);\n    } finally { setLoading(false); }\n  };\n\n  const runActor = async () => {\n    setLoading(true);\n    try {\n      const parsed = JSON.parse(input);\n      const res = await axios.post(`${backend}/api/run`, { actorId, apiKey, input: parsed });\n      setRunResult(res.data);\n      notify('Actor run successful', 'success');\n      scrollToResult();\n    } catch {\n      notify('Failed to run actor', 'error');\n      setRunResult(null);\n    } finally { setLoading(false); }\n  };\n\n  return (\n    <div className=\"min-h-screen px-4 py-8 bg-darkBg text-lightText\">\n      <ToastContainer />\n      <div className=\"max-w-4xl mx-auto space-y-8\">\n        <h1 className=\"text-3xl md:text-4xl font-bold text-center\" style={{ color: '#58a6ff' }}>\n          🔌 Apify Integration Dashboard\n        </h1>\n\n        <div className=\"flex flex-col sm:flex-row sm:items-center gap-4\">\n          <input\n            type=\"text\"\n            placeholder=\"Apify API Key\"\n            value={apiKey}\n            onChange={e => setApiKey(e.target.value)}\n            className=\"flex-1 px-4 py-2 bg-darkSurface border border-gray-600 rounded text-lightText focus:ring-2 focus:ring-accentBlue\"\n          />\n          <div className=\"flex gap-2\">\n            <button onClick={fetchMyActors} disabled={loading} className=\"px-4 py-2 bg-accentGreen hover:bg-green-600 text-white rounded shadow transition hover:scale-105\">\n              My Actors\n            </button>\n            <button onClick={fetchPublicActors} disabled={loading} className=\"px-4 py-2 bg-accentBlue hover:bg-blue-500 text-white rounded shadow transition hover:scale-105\">\n              Public Actors\n            </button>\n          </div>\n        </div>\n\n        {loading && <div className=\"text-center\"><ClipLoader color=\"#58a6ff\" /></div>}\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <ActorList title=\"🎭 My Actors\" actors={actors} fetchSchema={fetchSchema} />\n          <ActorList title=\"🌐 Public Actors\" actors={publicActors} fetchSchema={fetchSchema} />\n        </div>\n\n        {schema && (\n          <SchemaEditor actorId={actorId} input={input} setInput={setInput} runActor={runActor} loading={loading} />\n        )}\n\n        {runResult && (\n          <RunResult result={runResult} resultRef={resultRef} />\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;;;;;;;AAXA;;;;;;;;AASA,MAAM,aAAa,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD;;;;;;IAAqC,KAAK;;;;;AAKpD,SAAS;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACvC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACnD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAEzB,MAAM,SAAS,CAAC,KAAK,OAAO,MAAM,GAAK,mJAAA,CAAA,QAAK,CAAC,KAAK,CAAC,KAAK;YAAE,WAAW;QAAK;IAC1E,MAAM,iBAAiB,IAAM,WAAW,IAAM,UAAU,OAAO,EAAE,eAAe;gBAAE,UAAU;YAAS,IAAI;IACzG,MAAM;IAEN,MAAM,gBAAgB;QACpB,WAAW;QACX,IAAI;YACF,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,WAAW,CAAC,EAAE;gBAAE;YAAO;YAC/D,UAAU,IAAI,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE;YACpC,OAAO,qBAAqB;QAC9B,EAAE,OAAM;YACN,OAAO,+BAA+B;YACtC,UAAU,EAAE;QACd,SAAU;YAAE,WAAW;QAAQ;IACjC;IAEA,MAAM,oBAAoB;QACxB,WAAW;QACX,IAAI;YACF,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,GAAG,QAAQ,kBAAkB,CAAC;YAC1D,gBAAgB,IAAI,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE;YAC1C,OAAO,yBAAyB;QAClC,EAAE,OAAM;YACN,OAAO,iCAAiC;YACxC,gBAAgB,EAAE;QACpB,SAAU;YAAE,WAAW;QAAQ;IACjC;IAEA,MAAM,cAAc,OAAM;QACxB,WAAW;QACX,IAAI;YACF,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,WAAW,CAAC,EAAE;gBAAE,SAAS;gBAAI;YAAO;YAC5E,UAAU,IAAI,IAAI;YAClB,WAAW;YACX,OAAO,iBAAiB;YACxB,MAAM,IAAI,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC;YACnC,MAAM,SAAS,OAAO,WAAW,CAAC,OAAO,IAAI,CAAC,GAAG,GAAG,CAAC,CAAA;gBACnD,MAAM,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI;gBACnB,OAAO;oBAAC;oBAAG,MAAM,WAAW,KAAK,MAAM,YAAY,QAAQ,MAAM,UAAU,EAAE,GAAG,MAAM,WAAW,CAAC,IAAI;iBAAK;YAC7G;YACA,SAAS,OAAO,IAAI,CAAC,QAAQ,MAAM,GAAG,KAAK,SAAS,CAAC,QAAQ,MAAM,KAAK;QAC1E,EAAE,OAAM;YACN,OAAO,yBAAyB;YAChC,UAAU;QACZ,SAAU;YAAE,WAAW;QAAQ;IACjC;IAEA,MAAM,WAAW;QACf,WAAW;QACX,IAAI;YACF,MAAM,SAAS,KAAK,KAAK,CAAC;YAC1B,MAAM,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,GAAG,QAAQ,QAAQ,CAAC,EAAE;gBAAE;gBAAS;gBAAQ,OAAO;YAAO;YACpF,aAAa,IAAI,IAAI;YACrB,OAAO,wBAAwB;YAC/B;QACF,EAAE,OAAM;YACN,OAAO,uBAAuB;YAC9B,aAAa;QACf,SAAU;YAAE,WAAW;QAAQ;IACjC;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,mJAAA,CAAA,iBAAc;;;;;0BACf,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;wBAA6C,OAAO;4BAAE,OAAO;wBAAU;kCAAG;;;;;;kCAIxF,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCACC,MAAK;gCACL,aAAY;gCACZ,OAAO;gCACP,UAAU,CAAA,IAAK,UAAU,EAAE,MAAM,CAAC,KAAK;gCACvC,WAAU;;;;;;0CAEZ,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAO,SAAS;wCAAe,UAAU;wCAAS,WAAU;kDAAmG;;;;;;kDAGhK,8OAAC;wCAAO,SAAS;wCAAmB,UAAU;wCAAS,WAAU;kDAAiG;;;;;;;;;;;;;;;;;;oBAMrK,yBAAW,8OAAC;wBAAI,WAAU;kCAAc,cAAA,8OAAC,+LAAA,CAAA,aAAU;4BAAC,OAAM;;;;;;;;;;;kCAE3D,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,+HAAA,CAAA,UAAS;gCAAC,OAAM;gCAAe,QAAQ;gCAAQ,aAAa;;;;;;0CAC7D,8OAAC,+HAAA,CAAA,UAAS;gCAAC,OAAM;gCAAmB,QAAQ;gCAAc,aAAa;;;;;;;;;;;;oBAGxE,wBACC,8OAAC,kIAAA,CAAA,UAAY;wBAAC,SAAS;wBAAS,OAAO;wBAAO,UAAU;wBAAU,UAAU;wBAAU,SAAS;;;;;;oBAGhG,2BACC,8OAAC;wBAAU,QAAQ;wBAAW,WAAW;;;;;;;;;;;;;;;;;;AAKnD","debugId":null}}]
}